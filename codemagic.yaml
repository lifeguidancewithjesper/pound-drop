workflows:
  react-native-ios:
    name: Pound Drop iOS - Working Build
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: codemagic
    cache:
      cache_paths:
        - $CM_BUILD_DIR/mobile-app/pound-drop-fresh/node_modules
        - ~/.npm
        - $CM_BUILD_DIR/mobile-app/pound-drop-fresh/ios/Pods
        - ~/Library/Caches/CocoaPods
        - ~/Library/Developer/Xcode/DerivedData
    environment:
      ios_signing:
        certificates:
          - pound-drop-ios-distribution
        provisioning_profiles:
          - pound-drop-app-store-profile
      vars:
        BUNDLE_ID: "com.lifeguidancewithjesper.pounddrop"
        APPLE_TEAM_ID: "8VKM26D99V"
        XCODE_VERSION: "16.1"
        NODE_VERSION: "18"
    scripts:
      - name: Setup and navigate to mobile app
        script: |
          echo "=== Build Environment ==="
          echo "Repository root: $(pwd)"
          ls -la
          
          echo "=== Navigating to mobile app ==="
          cd mobile-app/pound-drop-fresh
          echo "Mobile app directory: $(pwd)"
          ls -la
          
          echo "=== Setting up Node.js 18 ==="
          nvm install 18 && nvm use 18
          node --version
          npm --version
          
          echo "=== Verifying core files ==="
          test -f App.tsx || { echo "ERROR: App.tsx missing"; exit 1; }
          test -f package.json || { echo "ERROR: package.json missing"; exit 1; }
          test -f index.js || { echo "ERROR: index.js missing"; exit 1; }
          echo "All core files present ✓"
          
          echo "=== Installing dependencies ==="
          npm install --legacy-peer-deps || { echo "ERROR: npm install failed"; exit 1; }
          
          echo "=== Installing Expo CLI ==="
          npm install -g @expo/cli@latest

      - name: Prebuild iOS project
        script: |
          cd mobile-app/pound-drop-fresh
          echo "=== Current directory: $(pwd) ==="
          
          export CI=1
          export NODE_ENV=production
          export EXPO_NO_TELEMETRY=1
          
          echo "=== Cleaning old iOS build ==="
          rm -rf ios/ || true
          
          echo "=== Running Expo prebuild ==="
          expo prebuild --platform ios --clean --non-interactive || {
            echo "ERROR: Expo prebuild failed"
            echo "App.json content:"
            cat app.json
            exit 1
          }
          
          echo "=== Verifying iOS project ==="
          ls -la ios/
          find ios -name "*.xcworkspace" || { echo "ERROR: No workspace found"; exit 1; }
          echo "iOS project created successfully ✓"

      - name: Set up code signing
        script: |
          echo "=== Setting up code signing ==="
          keychain add-certificates
          xcode-project use-profiles

      - name: Install CocoaPods
        script: |
          cd mobile-app/pound-drop-fresh/ios
          echo "=== CocoaPods in: $(pwd) ==="
          
          rm -rf Pods/ Podfile.lock || true
          
          pod install --repo-update || {
            echo "ERROR: CocoaPods failed"
            cat Podfile
            exit 1
          }
          
          echo "CocoaPods completed ✓"

      - name: Build iOS app
        script: |
          cd mobile-app/pound-drop-fresh
          echo "=== Building iOS app ==="
          
          WORKSPACE=$(find ios -name "*.xcworkspace" | head -1)
          echo "Using workspace: $WORKSPACE"
          
          SCHEME=$(xcodebuild -list -workspace "$WORKSPACE" | grep -E "^\s+pounddrop|^\s+PoundDrop|^\s+Pound" | head -1 | xargs)
          if [ -z "$SCHEME" ]; then
            SCHEME=$(xcodebuild -list -workspace "$WORKSPACE" | sed -n '/Schemes:/,/^$/p' | sed '1d;$d' | grep -v "^Pods-" | head -1 | xargs)
          fi
          echo "Building scheme: $SCHEME"
          
          xcode-project build-ipa \
            --workspace "$WORKSPACE" \
            --scheme "$SCHEME" \
            --config Release \
            --archive-xcargs "DEVELOPMENT_TEAM=$APPLE_TEAM_ID CODE_SIGN_IDENTITY='iPhone Distribution' CODE_SIGN_STYLE=Manual" \
            --archive-flags "-destination 'generic/platform=iOS'" || {
              echo "ERROR: Build failed"
              exit 1
            }
          
          echo "=== Build Success! ==="
          ls -la build/ios/ipa/

    artifacts:
      - mobile-app/pound-drop-fresh/build/ios/ipa/*.ipa
      - mobile-app/pound-drop-fresh/ios/build/logs/*.log

    publishing:
      app_store_connect:
        auth: integration
