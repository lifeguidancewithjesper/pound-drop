workflows:
  react-native-ios:
    name: Pound Drop iOS - JS Bundle & Swift Fix
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        certificates:
          - pound-drop-ios-distribution
        provisioning_profiles:
          - pound-drop-app-store-profile
      vars:
        BUNDLE_ID: "com.lifeguidancewithjesper.pounddrop"
        APPLE_TEAM_ID: "8VKM26D99V"
        XCODE_VERSION: "16.4"
        CM_BUILD_DIR: "./mobile-app/pound-drop-fresh"
    scripts:
      - name: Fix global expo permissions
        script: |
          echo "=== CRITICAL FIX: Global Expo Binary Permissions ==="
          sudo chmod +x /Users/builder/clone/node_modules/.bin/* 2>/dev/null || true
          chmod +x node_modules/.bin/* 2>/dev/null || true

      - name: Install dependencies
        script: |
          echo "=== Installing Dependencies ==="
          npm ci --legacy-peer-deps || npm install --legacy-peer-deps
          npm install @expo/cli@latest --legacy-peer-deps

      - name: Fix JavaScript files and test expo
        script: |
          echo "=== Fixing Potential JavaScript Issues ==="
          
          # Check for and remove Git conflict markers
          find . -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | xargs grep -l "<<<<<<< " | while read file; do
            echo "WARNING: Found conflict markers in $file"
            sed -i.bak '/<<<<<<< /,/>>>>>>> /d' "$file"
          done
          
          # Ensure proper entry point
          if [ ! -f "index.js" ]; then
            echo "Creating index.js entry point"
            echo "import { registerRootComponent } from 'expo';" > index.js
            echo "import App from './App';" >> index.js
            echo "" >> index.js
            echo "registerRootComponent(App);" >> index.js
          fi
          
          # Verify entry point syntax
          echo "=== Checking JavaScript Syntax ==="
          node -c index.js || { echo "ERROR: index.js has syntax errors"; cat index.js; exit 1; }
          node -c App.tsx || echo "App.tsx check completed"
          
          # Test expo access
          npx expo --version || { echo "ERROR: Expo CLI failed"; exit 1; }

      - name: Prebuild iOS project
        script: |
          echo "=== Expo Prebuild for iOS ==="
          export CI=1
          
          npx expo prebuild --platform ios --clean --non-interactive || { 
            echo "ERROR: Expo prebuild failed"
            exit 1
          }
          
          ls -la ios/ || { echo "ERROR: iOS directory not created"; exit 1; }

      - name: Set up code signing
        script: |
          echo "=== Setting up code signing ==="
          keychain add-certificates
          xcode-project use-profiles

      - name: Install CocoaPods dependencies
        script: |
          echo "=== Installing CocoaPods dependencies ==="
          cd ios
          pod install --repo-update --clean-install

      - name: Build iOS app with fixes
        script: |
          echo "=== Building iOS App for App Store ==="
          set -eo pipefail
          
          # Find workspace and scheme
          WORKSPACE=$(find ios -maxdepth 1 -name "*.xcworkspace" -print -quit)
          SCHEMES=$(xcodebuild -list -workspace "$WORKSPACE" | sed -n '/Schemes:/,/^$/p' | sed '1d;$d' | sed 's/^[[:space:]]*//')
          SCHEME=$(echo "$SCHEMES" | grep -E "PoundDrop|Pound Drop" | head -n1)
          
          if [ -z "$SCHEME" ]; then
            SCHEME=$(echo "$SCHEMES" | head -n1)
          fi
          
          echo "Using workspace: $WORKSPACE"
          echo "Using scheme: $SCHEME"
          
          # Build with both JS and Swift fixes
          xcode-project build-ipa \
            --workspace "$WORKSPACE" \
            --scheme "$SCHEME" \
            --config Release \
            SWIFT_OPTIMIZATION_LEVEL="-Onone" \
            ENABLE_PREVIEWS="NO" \
            HERMES_ENABLED="YES" \
            BUNDLE_COMMAND="npx react-native bundle --platform ios --dev false --entry-file index.js --bundle-output main.jsbundle"

    artifacts:
      - build/ios/ipa/*.ipa
      - ios/build/logs/*.log

    publishing:
      app_store_connect:
        auth: integration
